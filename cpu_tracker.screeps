var util = require('util');

function setup() {
    if(!Memory.cpu)
        Memory.cpu = {};
    if(!Memory.cpu.values_kept)
        Memory.cpu.values_kept = 1000;
    if(!Memory.cpu.roles)
        Memory.cpu.roles = {};
    if(!Memory.cpu.tasks)
        Memory.cpu.tasks = {};
    if(!Memory.cpu.main)
        Memory.cpu.main = {};
};

function add_value(values, obj) {
    values.push(obj)

    if(values.length > Memory.cpu.values_kept)
        values.splice(0, values.length - Memory.cpu.values_kept);
}

function calculate_average(values) {
    var sum = 0;
    if(!values) {
        return 0
    } else {
        values.forEach(function(obj) {
            sum += obj.used
        });
        return sum / values.length;
    }
}

function record(obj, used) {
    var time = Game.time;
    if(!obj.values)
        obj.values = []
    add_value(obj.values, {time:time, used:used})
    var used_arr = _.map(obj.values, _.property('used'))
    obj.last = used;
};

module.exports = {
    record_main : function() {
        if(Memory.cpu.disabled) {
            return;
        }
        setup();
        record(Memory.cpu.main, Game.cpu.getUsed());
    },
    record_task : function(task_name, cpu_use) {
        if(Memory.cpu.disabled) {
            return;
        }
        setup();
        if(!Memory.cpu.tasks[task_name]) {
            Memory.cpu.tasks[task_name] = {};
        }
        record(Memory.cpu.tasks[task_name], cpu_use)
    },
    calculate : function() {
        if(Memory.cpu.disabled) {
            return;
        }
    }
};
