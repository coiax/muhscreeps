var util = require('util');
var task_manager = require('task_manager');
var outcomes = task_manager.globals.outcomes;

module.exports = {
    name: "role.dumbscout",
    parts: [[MOVE]],
    run: function(task, creep) {
        creep.notifyWhenAttacked(false);
        var room_name = creep.room.name;
        var exit_pos = util.memoryPosition(task.exit_pos);

        if(room_name != task.destination_room) {
            if(!exit_pos) {
                task.destination_room = null;
            } else {
                task.old_room = room_name;
                creep.moveTo(exit_pos);
                return new outcomes.InProgress();
            }
        } else {
            creep.say("Ding!");
            task.destination_room = null;
            task.exit_pos = null;
        }
        if(!task.destination_room) {
            var exits = Game.map.describeExits(room_name);
            var dirs = [];
            for(var i in exits) {
                dirs.push(i);
            }
            var chosen_room;
            var exit_position;
            while(dirs.length && !exit_position) {
                var chosen_dir = _.sample(dirs);
                chosen_room = exits[chosen_dir];
                if((chosen_room == task.old_room) && (dirs.length != 1)) {
                    // don't go back unless we have to.
                    continue;
                }
                _.pull(dirs, chosen_dir);
                // the number is a FIND_* constant.
                var numeric_dir = parseInt(chosen_dir);
                exit_position = creep.pos.findClosestByRange(numeric_dir);
            }
            if(exit_position) {
                task.destination_room = chosen_room;
                task.exit_pos = exit_position;
                return new outcomes.Rerun();
            } else {
                // we are somehow marooned.
                //creep.suicide();
                creep.say("bluh");
                return new outcomes.InProgress();
            }
        }
    }
}

require('task_manager').register(module.exports.name, module.exports.run);
