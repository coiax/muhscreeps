var util=require("util");_.extend(Creep.prototype,require("mixin.log"));_.extend(Creep.prototype,require("mixin.task_stack"));Creep.prototype.get_memory=function(){return this.memory};Creep.prototype.wants_renew=function(){return 100>this.ticksToLive&&this.memory.autorenew&&!this.has_task_in_queue("renew")?!0:!1};Creep.prototype.renew_cost=function(){return floor(600/this.body.length)};Creep.prototype.body_cost=function(){var a=[];this.body.forEach(function(b){a.push(b.type)});return util.body_cost(a)};
Creep.prototype.body_part_count=function(a,b){var c=0;this.body.forEach(function(d){d.type==a&&(!b||100==d.hits)&&c++});return c};Creep.prototype.maintain_cost=function(){return _.includes(this.body,CLAIM)?0:this.body_cost()/CREEP_LIFE_TIME};Creep.prototype.is_full=function(){return _.sum(this.carry)==this.carryCapacity};Creep.prototype.is_empty=function(){return 0==_.sum(this.carry)};Creep.prototype.get_support=function(){return Game.spawns[this.memory.support]};
Creep.prototype.find_support=function(){var a=[],b;for(b in Game.spawns)a.push(Game.spawns[b]);if(a=this.pos.findClosestByPath(a))this.deregister_support(),a.support_creep(this)};Creep.prototype.deregister_support=function(){this.get_support()&&spawn.unsupport_creep(this)};Creep.prototype.set_support=function(a){if(this.memory.support==a.name)return null;this.deregister_support();a.support_creep(this)};
