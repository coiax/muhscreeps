var util = require('util');
var task_manager = require('task_manager');
var outcomes = task_manager.outcomes;

/* Each room with a spawn claims 0 or more external mining spots surrounding
   it. It then sends out miners capable of mining into local containers.
   Then the local containers are emptied regularly into the room's
   storage.
*/

// A mining spot must be accessible from the spawn point. It must not be
// claimed by another spawn

function is_suitable_room(rn) {
    var room = Game.rooms[rn];
    var intel = util.room_intel(rn);
    if(!intel)
        return false;
    // Ignore owned rooms.
    if(intel.controller && intel.controller.level)
        return false;
    if(room) {
        if(room.controller && room.controller.level)
            return false;
        var sources = room.find(FIND_SOURCES, {filter:
            function(src) {
                return src.is_harvestable();
        }});
        return sources.length;
    } else if(intel.sources && intel.sources.length) {
        return true;
    } else {
        return false;
    }
}

function role_distantminer(task, creep) {
    var current_room = creep.room.name;

    var rooms = util.room_walk(current_room, is_suitable_room);

    if(rooms.length) {
        var first_room = rooms[0];
        var new_task;
        if(first_room === current_room) {
            new_task = {
                type: "role.cow"
            };
        } else {
            new_task = {
                type: "travel_to_room",
                destination_room: _.sample(rooms)
            };
        }
        return new outcomes.PushTask(new_task);
    } else {
        return new outcomes.Failure("No suitable mining sites found.");
    }
}

task_manager.register(role_distantminer);
