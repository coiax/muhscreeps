var util=require("util"),RESERVE_THRESHOLD=4E3;function reservable_controller(c,b){var a=Memory.rooms[c];if(a&&a.intel&&(a=a.intel,a.controller&&0==a.controller.level))if(a=a.controller,a.reservation){if(a.reservation.username==b&&a.ticksToEnd<RESERVE_THRESHOLD)return!0}else return!0;return!1}
module.exports={name:"role.claimer",parts:[[MOVE,CLAIM],[MOVE,MOVE,CLAIM,CLAIM]],run:function(c,b){var a=Game.getObjectById(c.controller_id),d=util.memoryPosition(c.destination_pos),e=b.room.name;if(!a&&!d){var f=b.owner.username,a=util.room_walk(e,function(a,b){return reservable_controller(b,f)});if(!a.length)return b.say("noclaim"),{outcome:"continue"};a=_.sample(a);b.say(a);c.destination_pos=Memory.rooms[a].intel.controller.pos;return{outcome:"rerun"}}if(!a&&d){if(d.roomName==e)return c.controller_id=
b.room.controller.id,{outcome:"rerun"};b.moveTo(d);return{outcome:"continue"}}if(a){c.destination=null;rc=b.reserveController(a);if(rc==ERR_NOT_IN_RANGE)return b.moveTo(a),{outcome:"continue"};if(rc==ERR_INVALID_TARGET)return c.controller=null,{outcome:"rerun"}}}};require("task_manager").register(module.exports.name,module.exports.run);
