var util = require('util');
var task_manager = require('task_manager');
var outcomes = task_manager.globals.outcomes;

var role_name = "role.sentry";

function room_has_sentry(room_name, owner_username) {
    var room = Game.rooms[other_roomname];
    if(!room)
        return false;
    // An owned controller also counts.
    if(room.controller && room.controller.owner &&
        room.controller.owner.username == owner_username)
        return true;
    var creeps = room.find(FIND_MY_CREEPS);
    var other_sentries = util.get_creeps_with_task(creeps, role_name);
    for(var i in other_sentries) {
        var other_creep = other_sentries[i];
        var sentry_task = other_creep.has_task_in_queue(role_name);
        if(sentry_task.on_watch)
            return true;
    }
    return false;
};

module.exports.name = role_name;
module.exports.parts = [[MOVE]];
module.exports.run = function(task, creep) {
    if(task.on_watch)
        return new outcomes.InProgress();

    var current_room = creep.room.roomName;
    var owner_name = creep.owner.username;
    if(!task.sentry_roomname) {
        var sentryless_rooms = util.room_walk(creep.room.name, function(rn) {
            return !room_has_sentry(rn, owner_name);
        });
        if(!sentryless_rooms.length)
            return new outcomes.Failure("No sentryless rooms found.");
        task.sentry_roomname = sentryless_rooms[0];
    }

    if(task.sentry_roomname && (task.sentry_roomname != current_room)) {
        var new_task = {type: "travel_to_room",
            destination_room: sentryless_rooms[0]};
        return new outcomes.PushTask(new_task);
    }
    // Now check that the room hasn't gained a sentry while we were
    // travelling.
    var has_sentry = room_has_sentry(task.sentry_roomname, owner_name);
    if(has_sentry) {
        task.sentry_roomname = undefined;
        return new outcomes.Rerun();
    }
    task.on_watch = true;
    return new outcomes.InProgress();
};

task_manager.register(module.exports.name, module.exports.run);
